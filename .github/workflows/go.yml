# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Continuous Integration from Alura

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: postgres
      run: docker compose up -d postgres

    - name: lint
      # run: docker run --rm -v $(pwd):/app -w /app golangci/golangci-lint golangci-lint run controllers/ database/ models/ routes/
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.59
        args: controllers/ database/ models/ routes/

    - name: Test
      run: DB_HOST=${{ secrets.DB_HOST }} DB_PASSWORD=${{ secrets.DB_PASSWORD }} DB_USER=${{ secrets.DB_USER }} DB_NAME=${{ secrets.DB_NAME }} DB_PORT=${{ secrets.DB_PORT }} go test -v main_test.go
      # run: docker compose exec app go test -v main_test.go

    - name: Build
      run: go build main.go

    - name: Compiled Project
      uses: actions/upload-artifact@v4
      with:
        name: compiled_project
        path: main
